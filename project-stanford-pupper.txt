https://pupper.readthedocs.io/en/latest/
https://github.com/stanfordroboticsclub/StanfordQuadruped

TODO:
    passwd
    secure sshd_config
    https://github.com/PetoiCamp/OpenCat

parts:
  x raspberry pi 4, model B, 2GB ram
  x power connector adapter: XT60 male to Deans(T) female
  x lipo battery alarm: attach to battery to avoid completely discharging the battery (dangerous)
      https://www.youtube.com/watch?v=tTkT1fSAy9Y
  x 3d printed
  x soldering iron
  x raspi
    multimeter
    (optional) IMU setup: BNO080 IMU + Teensy LC
  x feet: for slippery surface, get rubber grommets (McMaster #90131A101) and fasten them to the pre-drilled holes in the feet.
  x       "Any sort of rubber disc/washer. Attach with short M3x8 screws and locknuts."

LIPO BATTERY:
  Always charge in BALANCE mode.
  DISCHARGING TOO MUCH = risk of fire.
    Below 3V per-cell => permanent degradation.
    Set "low-voltage cutoff" to 3.4V per cell.
  Safest charge-rate for LiPo batteries is 1C (1x Amps capacity of battery).
    => for 5200mAh battery use 5.2A
    if charger doesn't support 5.2A it's fine to use a lower value, just takes longer
  Full charge = 4.2v/cell
  STORAGE:
    Always set LiPo to "storage charge" if you won't use it same-day.
    Proper LiPo storage voltage = 3.8V per cell
    LiPo battery can be damaged by sitting fully charged for as little as 1 week.

HARDWARE
  servo motor "crackling" noise:
  https://www.rctech.net/forum/nitro-road/283356-servo-noise-normal.html
    > The crackling is perfectly normal with digital servos. It usually happens
    > when there is a very slight load on the servo and it can't quite reach
    > neutral perfectly to stop calling on the motor. There isn't any negative
    > effect, but as a rule I wouldn't leave it loaded and crackling for minutes
    > at a time.


SOFTWARE
  SETUP
    LOGIN
      default login: pi / raspberry
    INTERNET
      Edit /etc/wpa_supplicant/wpa_supplicant.conf
  problems:
    # wlan fails in ro filesystem:
    Feb 14 10:19:29 oppy5 dhclient[2930]: can't create /var/lib/dhcp/dhclient.wlan0.leases: Read-only file system
  $ ssh pi@10.0.0.99  # ethernet
  $ ssh pi@192.168.2.110  # wifi
  use of `dd` to flash the sd card: https://www.raspberrypi.org/documentation/installation/installing-images/mac.md
    $ sudo dd bs=1m if=2019-09-26-raspbian-buster-lite.img of=/dev/rdisk2 ; sync
  "using latest raspbian OS: The only thing that needed to be corrected were missing udev rules for the PS4 controller. Otherwise the software instructions were sufficient." https://groups.google.com/d/msg/stanford-quadrupeds/e01e9xvb4V4/2o81D3CeBwAJ
  # update wifi:
  sudo raspi-config
  # At boot, files are overwritten with /boot/appliance/*.
  # To preserve wifi settings:
  sudo cp /etc/wpa_supplicant/wpa_supplicant.conf /boot/appliance/etc/wpa_supplicant/wpa_supplicant.conf
  # control ps4 colors, ...:
  vim StanfordQuadruped/pupper/HardwareConfig.py

  behavior
    Q1: Robot walks too fast. How can I control the speed of the robot?
    A1: You can adjust the frequency of the trot in the config file here:
        https://github.com/stanfordroboticsclub/StanfordQuadruped/blob/master/pupper/Config.py.
        Look for two variables: self.overlap_time and self.swing_time

USAGE LOG
  - development
    ```
    $ rw
    $ vim calibrate.py
    $ python3 calibrate.py
    ```
  - physical access: keyboard + micro HDMI cable to monitor
  - ssh access
    - hostname = oppy5
    - Can use the ipv6 address listed by router status page.
      ```
      $ ssh pi@2003:c1:df39:xxxx:xxxx:xxxx:xxxx:xxxx
      ```
      - ipv4 address may be wrong (or delayed), doesn't match "ifconfig" on the raspi device.
  - dhcp always fails at startup (readonly filesystem)
    - can "fix" it temporarily with physical access:
      ```
      rw
      sudo dhcpcd
      ```
  - show power status  https://elinux.org/RPI_vcgencmd_usage
    ```
    $ vcgencmd commands
    $ vcgencmd measure_temp
        temp=52.0'C
    $ vcgencmd measure_volts
        volt=0.8718V
    $ vcgencmd get_throttled  # Non-zero = power supply issue. https://gist.github.com/Paraphraser/17fb6320d0e896c6446fb886e1207c7e
        throttled=0x0
    ```
  - control LEDs
    ```
    # List available "modes" for LED 0.
    $ cat /sys/class/leds/led0/trigger
        [none] kbd-capslock timer oneshot heartbeat backlight gpio cpu cpu0 cpu1 cpu2 cpu3 default-on input mmc0
    $ sudo sh -c 'echo none > /sys/class/leds/led0/trigger'       # LED 0: default off
    $ sudo sh -c 'echo heartbeat > /sys/class/leds/led0/trigger'  # LED 0: "heartbeat" mode
    $ sudo sh -c 'echo 1 > /sys/class/leds/led0/brightness'       # turn on green LED
    $ sudo sh -c 'echo 0 > /sys/class/leds/led1/brightness'       # turn off red LED
    ```
  - problem: DNS failure ("git clone" fails, "apt update" fails).
    ```
    $ git clone https://github.com/justinmk/config
    Cloning into 'config'...
    fatal: unable to access 'https://github.com/justinmk/config/': Could not resolve host: github.com
    ```
    - solution:
      ```
      # Manually fix date.
      $ date -s '2023-12-31 16:00:00'
      # Manually configure DNS server(s).
      /etc/dhcpcd.conf:
        static domain_name_servers=8.8.8.8 1.1.1.1 192.168.1.1
      $ sudo systemctl daemon-reload
      $ sudo service dhcpcd restart
      ```
  - How to detect "interactive" mode to change system config during startup?
    - XXX: detect battery vs mains/wall power.
    - Detect keyboard attached.
      ```
      _has_kbd() {
        [ -d /dev/input/by-path/ ] && find /dev/input/by-path/ -name '*kbd' | grep 'kbd$' 2>/dev/null
      }
      ```
      - Example startup logs:
        ```
        oppy5 robotstatus.sh[342]: /dev/input/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.1:1.0-event-kbd
        oppy5 robotstatus.sh[342]: keyboard detected, configuring "interactive" setup.
        ```
  - Pair the PS4 controller: https://pupper.readthedocs.io/en/latest/guide/operation.html
    1. Hold the "share" button and circular Playstation button until the light makes "double flashes".
    2. When the controller binds to the robot, it should turn "deactivated" color (as set in `HardwareConfig.py`).
    3. Press L1 on the controller to “activate” the robot. The controller should a different color (as set in `HardwareConfig.py`).
